# -*- coding: utf-8 -*-
"""EXP-1(ML).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q-tkroGcY7r3sm1WePCDiIOXTl43T6N3
"""

!

!pip install kaggle

import os
os.environ['KAGGLE_CONFIG_DIR']="/content"

!kaggle datasets download stackoverflow/stack-overflow-2018-developer-survey

!unzip /content/stack-overflow-2018-developer-survey.zip

import pandas as pd

# Upload the CSV in Colab and provide correct filename
df = pd.read_csv('/content/survey_results_public.csv')

# Display first few rows
df.head()

null_count = df.isnull().sum()
print("Null values in each column:\n")
print(null_count)

null_percentage = (df.isnull().sum() / len(df)) * 100
print("Percentage of null values:\n")
print(null_percentage)

import matplotlib.pyplot as plt

# Check if column exists
if 'Hobbyist' in df.columns:
    df['Hobbyist'].value_counts().plot.pie(autopct='%1.1f%%', startangle=90)
    plt.title("Do People Find Coding a Hobby?")
    plt.ylabel("")
    plt.show()
else:
    print("Column 'Hobbyist' not found.")

if 'OpenSourcer' in df.columns:
    print("Open Source Contributions:\n")
    print(df['OpenSourcer'].value_counts())
else:
    print("Column 'OpenSourcer' not found.")

top_countries = df['Country'].value_counts().head(20)
top_countries.plot(kind='barh', title='Top 20 Countries')
plt.xlabel('Number of Respondents')
plt.gca().invert_yaxis()
plt.show()

from collections import Counter

if 'DevType' in df.columns:
    roles = df['DevType'].dropna().str.split(';')
    all_roles = [role.strip() for sublist in roles for role in sublist]
    top_roles = pd.Series(Counter(all_roles)).sort_values(ascending=False).head(10)
    top_roles.plot(kind='bar', title='Top 10 Developer Roles')
    plt.ylabel('Number of Respondents')
    plt.xticks(rotation=45)
    plt.show()
else:
    print("Column 'DevType' not found.")

if 'LanguageHaveWorkedWith' in df.columns:
    langs = df['LanguageHaveWorkedWith'].dropna().str.split(';')
    all_langs = [lang.strip() for sublist in langs for lang in sublist]
    lang_count = pd.Series(Counter(all_langs)).sort_values(ascending=False).head(10)
    lang_count.plot(kind='bar', title='Top 10 Languages')
    plt.ylabel('Developers Count')
    plt.xticks(rotation=45)
    plt.show()
else:
    print("Column 'LanguageHaveWorkedWith' not found.")

if 'EdLevel' in df.columns:
    df['EdLevel'].value_counts().head(7).plot(kind='bar')
    plt.title('Top Education Levels')
    plt.xticks(rotation=45)
    plt.ylabel('Count')
    plt.show()
else:
    print("Column 'EdLevel' not found.")

if 'Employment' in df.columns:
    df['Employment'].value_counts().plot(kind='bar', title='Employment Types')
    plt.xticks(rotation=45)
    plt.ylabel('Count')
    plt.show()
else:
    print("Column 'Employment' not found.")

if 'Age' in df.columns:
    df['Age'].dropna().plot.hist(bins=30, edgecolor='black')
    plt.title('Age Distribution of Respondents')
    plt.xlabel('Age')
    plt.show()
else:
    print("Column 'Age' not found.")

if 'WorkWeekHrs' in df.columns:
    df['WorkWeekHrs'].dropna().plot.hist(bins=30, edgecolor='black')
    plt.title('Work Week Hours Distribution')
    plt.xlabel('Hours per Week')
    plt.show()
else:
    print("Column 'WorkWeekHrs' not found.")

if 'ConvertedCompYearly' in df.columns:
    df['ConvertedCompYearly'].dropna().plot.hist(bins=40, edgecolor='black', range=(0, 200000))
    plt.title('Annual Salary Distribution (Trimmed at $200k)')
    plt.xlabel('Salary (USD)')
    plt.show()
else:
    print("Column 'ConvertedCompYearly' not found.")