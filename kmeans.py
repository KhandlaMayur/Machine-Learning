# -*- coding: utf-8 -*-
"""ML_LAB(6).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mTs-HAAGO8dRezsx66zdtSVUbQp-PEwd
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

from scipy.io import loadmat
mat = loadmat("/content/ex7data2.mat")
X = mat["X"]

#initialize centroids
import random
init_centroids = random.sample(range(0, len(X)),3)

init_centroids

centroids=[]
for i in init_centroids:
  centroids.append(X[i])
centroids

def calc_dist(x1,x2):
  return(sum((x1-x2)*2))*0.5

from os import forkpty
from ast import Assign
def findclosestcentroid(centroid,X):
  Assigned_centroid=[]
  for i in X:
    distance=[]
    for j in centroid:
      distance.append(calc_dist(i,j))
    Assigned_centroid.append(np.argmin(distance))
  return Assigned_centroid

findclosestcentroid(centroids,X)

#mean of the observations falling in each cluster category
def new_centroid(centroid,X):
  new_centroids=[]
  new_df=pd.concat([pd.DataFrame(X),pd.DataFrame(centroid,columns=['centroid'])],axis=1)
  for c in set(new_df['centroid']):
    current_cluster=new_df[new_df['centroid']==c].iloc[:,:-1]
    centroid_mean=current_cluster.mean()
    new_centroids.append(centroid_mean)
  return new_centroids

for i in range(10):
  obs_cen=findclosestcentroid(centroids,X)
  centroids=new_centroid(obs_cen,X)
  plt.figure()
  plt.scatter(np.array(centroids)[:,0],np.array(centroids)[:,1],color='black')
  plt.scatter(X[:,0],X[:,1])
  plt.show()

centroids

#image compression

import cv2
img=cv2.imread("/content/CAT.jpg")
img.shape

im=(img/255).reshape(200*200,3)

#initialize centroids
import random
init_centroids = random.sample(range(0, len(im)),6)

centroids=[]
for i in init_centroids:
  centroids.append(im[i])
centroids

X=np.array(im)
for i in range(10):
  obs_cen=findclosestcentroid(centroids,X)
  centroids=new_centroid(obs_cen,X)
