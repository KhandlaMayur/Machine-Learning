# -*- coding: utf-8 -*-
"""ML_LAB(8) 03/09/2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10D5qbUUn2kTNwERoQF1b8wHEVsCk3T1L
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

dataset = pd.read_csv("/content/KMeans.csv")

dataset

x=dataset.iloc[:,[1,2]].values

import scipy.cluster.hierarchy as sch
dendrogram=sch.dendrogram(sch.linkage(x,method='ward'))
plt.title('Dendrogram')
plt.xlabel('Customers')
plt.ylabel('Euclidean Distance')
plt.show()

from sklearn.cluster import AgglomerativeClustering
hc=AgglomerativeClustering(n_clusters=5,linkage='ward')
yhc=hc.fit_predict(x)

yhc

#plot the clusters
plt.scatter(x[yhc==0,0],x[yhc==0,1],c='red',label='cluster1')
plt.scatter(x[yhc==1,0],x[yhc==1,1],c='yellow',label='cluster2')
plt.scatter(x[yhc==2,0],x[yhc==2,1],c='blue',label='cluster3')
plt.scatter(x[yhc==3,0],x[yhc==3,1],c='green',label='cluster4')
plt.scatter(x[yhc==4,0],x[yhc==4,1],c='magenta',label='cluster5')

plt.legend()

"""DBSCAN"""

from sklearn.cluster import DBSCAN
from sklearn.preprocessing import StandardScaler

x=StandardScaler().fit_transform(x)

db=DBSCAN(eps=0.3,min_samples=3).fit(x)

db.labels_

db.core_sample_indices_

len(set(db.labels_))

#Identify the boundary points
#Visualize the points in following categories:
#1. Noise Points: as black color
#2. All the cluster points as different colors
#2a. Core point size > Boundary point size

